name: Build Android APK

on:
  push:
    branches:
      - main # Or your default branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install beautifulsoup4
        npm install -g cordova cordova-android

    - name: Create Cordova project and build
      run: |
        # Extract config from build.py
        APP_NAME=$(python -c "from build import APP_NAME; print(APP_NAME)")
        PACKAGE_NAME=$(python -c "from build import PACKAGE_NAME; print(PACKAGE_NAME)")
        VERSION_CODE=$(python -c "from build import VERSION_CODE; print(VERSION_CODE)")
        VERSION_NAME=$(python -c "from build import VERSION_NAME; print(VERSION_NAME)")
        ICON_PATH=$(python -c "from build import ICON_PATH; print(ICON_PATH)")
        WEB_ASSETS_PATH=$(python -c "from build import WEB_ASSETS_PATH; print(WEB_ASSETS_PATH)")

        # Create a Cordova project
        cordova create $APP_NAME $PACKAGE_NAME "$APP_NAME"
        cd $APP_NAME

        # Add Android platform
        cordova platform add android@latest

        # Copy web assets and icon
        cp -r ../$WEB_ASSETS_PATH/* www/
        cp ../$ICON_PATH res/icon/android/icon-512x512.png

        # Update config.xml with version and icon
        python -c "
from bs4 import BeautifulSoup
with open('config.xml', 'r+') as f:
    soup = BeautifulSoup(f.read(), 'xml')
    widget = soup.find('widget')
    widget['version'] = '$VERSION_NAME'
    widget['android-versionCode'] = '$VERSION_CODE'
    # Add icon tag
    icon_tag = soup.new_tag('icon', src='res/icon/android/icon-512x512.png')
    widget.append(icon_tag)
    f.seek(0)
    f.write(str(soup))
    f.truncate()
        "

        # Build the APK
        cordova build android --release -- -- --keystore=release.keystore --storePassword=$KEYSTORE_PASSWORD --alias=$KEY_ALIAS --password=$KEY_PASSWORD

    - name: Sign the APK
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: ${{ github.workspace }}/${{ env.APP_NAME }}/platforms/android/app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY_BASE64 }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: eruda-browser-apk
        path: ${{ github.workspace }}/${{ env.APP_NAME }}/platforms/android/app/build/outputs/apk/release/app-release-signed.apk
